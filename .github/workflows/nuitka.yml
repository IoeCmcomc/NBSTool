name: Build with Nuitka

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-20.04]
        arch: [x86, x64]
        exclude:
          - os: ubuntu-20.04
            arch: x86
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check-out repository
      uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: ${{ matrix.arch }} # optional x64 or x86. Defaults to x64 if not specified
        cache: 'poetry'

    - name: Install external dependencies (Linux)
      if: matrix.os == 'ubuntu-20.04'
      run: sudo apt install build-essential python3.8-dev python3.8-tk

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install
        poetry run python -c "import sys; print(sys.version)"
        
    - name: Build standalone folder (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        poetry run nuitka --standalone --enable-plugin=tk-inter --include-data-dir=sounds=sounds --include-data-dir=ffmpeg=ffmpeg --include-data-dir=ui=ui --include-data-files=icon.ico=icon.ico --windows-icon-from-ico=icon.ico --windows-product-name=NBSTool --windows-company-name=IoeCmcomc --windows-file-version=1.3.0.0 --windows-product-version=1.3.0.0 --windows-file-description=NBSTool --show-anti-bloat-changes --assume-yes-for-downloads main.py

    - name: Build standalone folder (Linux)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        poetry run python3 -m nuitka --standalone --enable-plugin=tk-inter --include-data-dir=sounds=sounds --include-data-dir=ui=ui --include-data-files=icon.ico=icon.ico --disable-console --show-anti-bloat-changes --assume-yes-for-downloads main.py

    - name: Zip standalone folder
      uses: vimtor/action-zip@v1
      with:
        files: main.dist/
        dest: NBSTool_${{ runner.os }}_${{ matrix.arch }}.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }} ${{ matrix.arch }} Build
        path: NBSTool_${{ runner.os }}_${{ matrix.arch }}.zip